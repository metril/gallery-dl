start-github-runner-ubuntu:
    stage: build
    image: vault:latest
    before_script:
        - apk add --update curl && rm -rf /var/cache/apk/*
    script: |
        export VAULT_ADDR=https://vault.azureolympos.com
        export VAULT_TOKEN="$(vault write -field=token auth/jwt/login role=gitlab-runner jwt=$CI_JOB_JWT)"
        export TAILSCALE_EPHEMERAL_KEY="$(vault kv get -field=ephemeral tailscale/authkeys)"
        export GITHUB_TOKEN="$(vault kv get -field=token github/developer)"
        export GITLAB_REGISTRATION_TOKEN="$(vault kv get -field=token gitlab/runner-registration)"
        curl -H "Authorization: token ${GITHUB_TOKEN}" \
        -H 'Accept: application/vnd.github.everest-preview+json' \
        "https://api.github.com/repos/${GITHUB_REPO}/actions/workflows/gitlab-runner-ubuntu.yaml/dispatches" \
        -d '{"ref": "main", "inputs": {"registration_token": "'${GITLAB_REGISTRATION_TOKEN}'", "gitlab_url": "'https://gitlab.azureolympos.com'", "tailscale_authkey": "'${TAILSCALE_EPHEMERAL_KEY}'","docker_image": "'docker:19.03.12'"}}'

start-github-runner-windows:
    stage: build
    image: vault:latest
    before_script:
        - apk add --update curl && rm -rf /var/cache/apk/*
    script: |
        export VAULT_ADDR=https://vault.azureolympos.com
        export VAULT_TOKEN="$(vault write -field=token auth/jwt/login role=gitlab-runner jwt=$CI_JOB_JWT)"
        export TAILSCALE_EPHEMERAL_KEY="$(vault kv get -field=ephemeral tailscale/authkeys)"
        export GITHUB_TOKEN="$(vault kv get -field=token github/developer)"
        export GITLAB_REGISTRATION_TOKEN="$(vault kv get -field=token gitlab/runner-registration)"
        curl -H "Authorization: token ${GITHUB_TOKEN}" \
        -H 'Accept: application/vnd.github.everest-preview+json' \
        "https://api.github.com/repos/${GITHUB_REPO}/actions/workflows/gitlab-runner-windows.yaml/dispatches" \
        -d '{"ref": "main", "inputs": {"registration_token": "'${GITLAB_REGISTRATION_TOKEN}'", "gitlab_url": "'https://gitlab.azureolympos.com'", "tailscale_authkey": "'${TAILSCALE_EPHEMERAL_KEY}'","docker_image": "'23-windowsservercore-1809'"}}'

start-github-runner-macos:
    stage: build
    image: vault:latest
    before_script:
        - apk add --update curl && rm -rf /var/cache/apk/*
    script: |
        export VAULT_ADDR=https://vault.azureolympos.com
        export VAULT_TOKEN="$(vault write -field=token auth/jwt/login role=gitlab-runner jwt=$CI_JOB_JWT)"
        export TAILSCALE_EPHEMERAL_KEY="$(vault kv get -field=ephemeral tailscale/authkeys)"
        export GITHUB_TOKEN="$(vault kv get -field=token github/developer)"
        export GITLAB_REGISTRATION_TOKEN="$(vault kv get -field=token gitlab/runner-registration)"
        curl -H "Authorization: token ${GITHUB_TOKEN}" \
        -H 'Accept: application/vnd.github.everest-preview+json' \
        "https://api.github.com/repos/${GITHUB_REPO}/actions/workflows/gitlab-runner-macos.yaml/dispatches" \
        -d '{"ref": "main", "inputs": {"registration_token": "'${GITLAB_REGISTRATION_TOKEN}'", "gitlab_url": "'https://gitlab.azureolympos.com'", "tailscale_authkey": "'${TAILSCALE_EPHEMERAL_KEY}'","docker_image": "'docker:19.03.12'"}}'

build:linux:
    stage: build
    image: ubuntu:latest
    before_script:
        - apt update
        - apt install curl wget gnupg lsb-release -y
        - curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
        - chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
        - echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | tee /etc/apt/sources.list.d/github-cli.list > /dev/null
        - curl -fsSL https://apt.releases.hashicorp.com/gpg | gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
        - echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/hashicorp.list
        - apt update
        - apt install gh vault python3-pip -y
    script:
        - pip install requests requests[socks] yt-dlp pyinstaller
        - python3 scripts/pyinstaller.py
        - export VAULT_ADDR=https://vault.azureolympos.com
        - export VAULT_TOKEN="$(vault write -field=token auth/jwt/login role=gitlab-runner jwt=$CI_JOB_JWT)"
        - export GH_TOKEN="$(vault kv get -field=token github/developer)"
        - DATE=`TZ=":America/New_York" date +%Y-%m-%d_%H-%M`
        - TITLE=gallery-dl_${DATE}
        - gh repo clone metril/gallery-dl metril_gallery-dl
        - cd metril_gallery-dl
        - gh release create --latest --target master -t $TITLE latest ./builds/mirrors/gallery-dl/dist/*
    tags:
        - githubrunner-ubuntu

build:windows:
    stage: build
    image: python:3.11.1-windowsservercore-1809
    script:
        - pip install requests requests[socks] yt-dlp pyinstaller
        - python scripts/pyinstaller.py
    tags:
        - githubrunner-windows

build:macos:
    stage: build
    image: python:3.11
    script:
        - pip install requests requests[socks] yt-dlp pyinstaller
        - python scripts/pyinstaller.py
    tags:
        - githubrunner-macos
